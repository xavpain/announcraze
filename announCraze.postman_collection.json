{
	"info": {
		"_postman_id": "3b4ec6b3-7560-4c5c-a78a-207145184590",
		"name": "announCraze",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19884206",
		"_collection_link": "https://www.postman.com/tektuneup/workspace/announcraze-taker-test/collection/19884206-3b4ec6b3-7560-4c5c-a78a-207145184590?action=share&source=collection_link&creator=19884206"
	},
	"item": [
		{
			"name": "Auth related",
			"item": [
				{
					"name": "Register (FIRST ACC GETS ADMIN)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"iencli346\",\r\n  \"password\": \"Postman123\",\r\n  \"repeatPassword\": \"Postman123\",\r\n  \"email\": \"spqr335@yopmail.com\",\r\n  \"fullName\": \"Mr Client\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"fb179398c5d8be82bfe458880f40d88676961e860eb884c7ed8e09bb1e291d477ffcc18c51e02fe0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/users/verify?token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								"verify"
							],
							"query": [
								{
									"key": "token",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newToken = pm.response.json().jwtToken;\r",
									"\r",
									"// verify that we have a token value\r",
									"pm.test(\"Access token value should be present\", function() {\r",
									"  pm.expect(newToken.length > 0);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"token\", newToken);\r",
									"\r",
									"// simple verification that the value was saved as intended\r",
									"pm.test(\"Token environment variable should be updated\", function() {\r",
									"  const checkToken = pm.collectionVariables.get('token');\r",
									"  pm.expect(checkToken).to.eql(newToken);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"protesteur5@yopmail.com\",\r\n    \"password\": \"Azerty123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login dummy user account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newToken = pm.response.json().jwtToken;\r",
									"\r",
									"// verify that we have a token value\r",
									"pm.test(\"Access token value should be present\", function() {\r",
									"  pm.expect(newToken.length > 0);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"token\", newToken);\r",
									"\r",
									"// simple verification that the value was saved as intended\r",
									"pm.test(\"Token environment variable should be updated\", function() {\r",
									"  const checkToken = pm.collectionVariables.get('token');\r",
									"  pm.expect(checkToken).to.eql(newToken);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"spqr335@yopmail.com\",\r\n    \"password\": \"Postman123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"protesteur5@yopmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/users/forgot-password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								"forgot-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset Password (email token)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"token\": \"\",\r\n  \"password\": \"string\",\r\n  \"repeatPassword\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/users/reset-password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password (auth token)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"Azerty123\",\r\n    \"repeatPassword\": \"Azerty123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/users/change-password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								"change-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Create (6 images max)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "pictures",
									"type": "file",
									"src": "/C:/Users/XAV/Desktop/eee.png"
								},
								{
									"key": "title",
									"value": "Wood table",
									"type": "text"
								},
								{
									"key": "price",
									"value": "40",
									"type": "text"
								},
								{
									"key": "category",
									"value": "Furniture",
									"type": "text"
								},
								{
									"key": "pictures",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "postcode",
									"value": "94270",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/products/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/products/6554b26f45d65e89c3f1ce2f",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								"6554b26f45d65e89c3f1ce2f"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all my products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/products/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Browse",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"maxPrice\": \"50\",\r\n    \"maxDistance\": 10,\r\n    \"postcode\": \"75001\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/products/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/products/6554c03b695c9a9b2b745357",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								"6554c03b695c9a9b2b745357"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Large Wooden Table\",\r\n    \"price\": 50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/products/6554b8a53bfbdbbe3a5fccc3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								"6554b8a53bfbdbbe3a5fccc3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add pics to product",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "pictures",
									"type": "file",
									"src": "/C:/Users/XAV/Desktop/eee.png"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/products/6554b26f45d65e89c3f1ce2f/pictures",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								"6554b26f45d65e89c3f1ce2f",
								"pictures"
							],
							"query": [
								{
									"key": "pictures",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove pics from Product",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pictureNames\": [\"6554b26f45d65e89c3f1ce2f-85dfcdf3f028185d.png\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/products/6554b26f45d65e89c3f1ce2f/pictures",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								"6554b26f45d65e89c3f1ce2f",
								"pictures"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Product (ADMIN ONLY)",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/products/6554e8dd7b22e5c98eb8df80/verify",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								"6554e8dd7b22e5c98eb8df80",
								"verify"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Propositions",
			"item": [
				{
					"name": "Create proposition",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"price\": 15,\r\n    \"text\": \"Please sell it to me\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/products/6554e8dd7b22e5c98eb8df80/bid",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								"6554e8dd7b22e5c98eb8df80",
								"bid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get bids where user is either buyer or seller",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/users/bids",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								"bids"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify Proposition",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/products/bid/id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								"bid",
								"id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Accept bid",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/products/bid/6554ea9edf34019eaaae8689/accept",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								"bid",
								"6554ea9edf34019eaaae8689",
								"accept"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decline bid",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/products/bid/id/decline",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"products",
								"bid",
								"id",
								"decline"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}